version: "3"

services:
  server:
    build: 
      context: ./api/server
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    ports:
      - 8080:8080

  link_api:
    build: 
      context: ./api/link
      dockerfile: Dockerfile
    volumes:
      - ./api/link:/link_api
    environment:
      DEV: 1
      MYSQL_DATABASE: area
      MYSQL_USER: user
      MYSQL_PASSWORD: test
    links:
      - db
    depends_on:
      - db
    ports:
      - 9000:9000
    restart: always

  start_service_api:
    build: 
      context: ./api/link
      dockerfile: Dockerfile
    volumes:
      - ./api/link:/link_api
    environment:
      DEV: 1
      MYSQL_DATABASE: area
      MYSQL_USER: user
      MYSQL_PASSWORD: test
    links:
      - db
    depends_on:
      - db
    command: "sh ./start_service_api.sh"
    restart: always

  news_api:
    build: 
      context: ./api/news
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    ports:
      - 9002:5000

  intra_api:
    build: 
      context: ./api/intra
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    ports:
      - 9003:8080
    restart: always

  github_api:
    build: 
      context: ./api/github
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
      PORT: 9000
    ports:
      - 9004:9000
    restart: always

  currency_api:
    build: 
      context: ./api/currency
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    ports:
      - 9005:8080
    restart: always
  
  #weather_api:
  #  build: 
  #    context: ./api/weather
  #    dockerfile: Dockerfile
  #  environment:
  #    DEV_ENV: "TRUE"
  #  ports:
  #    - 9006:8080
  #  restart: always

  db:
    image: mysql:5.7
    ports: 
      - "3306:3306"
    environment:
      MYSQL_DATABASE: area
      MYSQL_USER: user
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - ./db-data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links: 
      - db
    depends_on:
      - db
    ports:
      - 8000:80
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - /sessions
    
  front:
    build:
      context: ./area_front
      dockerfile: Dockerfile
    ports:
      - 80:80
