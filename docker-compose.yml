version: "3"

services:
  server:
    build: 
      context: ./api/server
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    image: server-dashboard
    ports:
      - 8080:8080

  users_api:
    build: 
      context: ./api/users
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
      PORT: "9000"
    image: users_api_dashboard
    links:
      - db:database
    depends_on:
      - db
    ports:
      - 9000:9000

  widget_api:
    build: 
      context: ./api/widget
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
      PORT: "9001"
    image: widget_api_dashboard
    links:
      - db:database
    depends_on:
      - db
      - users_api
    ports:
      - 9001:9001
    restart: unless-stopped

  news_api:
    build: 
      context: ./api/news
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    image: news_api_dashboard
    ports:
      - 9002:5000

  intra_api:
    build: 
      context: ./api/intra
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    image: intra_api_dashboard
    ports:
      - 9003:8080
    restart: unless-stopped

  github_api:
    build: 
      context: ./api/github
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
      PORT: 9000
    image: github_api_dashboard
    ports:
      - 9004:9000
    restart: unless-stopped

  currency_api:
    build: 
      context: ./api/currency
      dockerfile: Dockerfile
    environment:
      DEV_ENV: "TRUE"
    image: currency_api_dashboard
    ports:
      - 9005:8080
    restart: unless-stopped

  db:
    image: mysql:5.7
    ports: 
      - "3306:3306"
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - db-data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links: 
      - db:db
    depends_on:
      - db
    ports:
      - 8000:80
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - /sessions
    
  area_front:
    build:
      context: ./area_front
      dockerfile: Dockerfile
    ports:
      - 80:80

volumes:
  db-data: